package com.plat.webm.news.controller;


import com.alibaba.fastjson.JSONArray;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.plat.webm.exception.Result;
import com.plat.webm.news.entity.Product;
import com.plat.webm.news.entity.Successfulcase;
import com.plat.webm.news.service.IProductService;
import com.plat.webm.news.service.ISuccessfulcaseService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.Map;

/**
 * <p>
 *  前端控制器
 * </p>
 *
 * @author 无良芳
 * @since 2020-08-06
 */
@Api(value = "成功案例Controller", tags = {"成功案例接口"})
@RestController
@RequestMapping("/news/successfulcase")
public class SuccessfulcaseController {
    @Autowired
    ISuccessfulcaseService successfulcaseService;

    //{"size":3,"current":0,"title":"","newsType":"1"}
    @ApiOperation(value = "产品分页查询", notes = "参数格式：{\"size\":3,\"current\":0,\"title\":\"\"}", httpMethod = "POST")
    @RequestMapping(value = "/SingleTableSelect", method = RequestMethod.POST)
    public Result SingleTableSelect(@RequestBody Map<String, Object> body, HttpServletRequest httpServletRequest) throws Exception {

        Page<Successfulcase> page = new Page<>();
        page.setSize(Integer.parseInt(body.get("size").toString()));
        page.setCurrent(Integer.parseInt(body.get("current").toString()));

        QueryWrapper<Successfulcase> ew = new QueryWrapper<>();
        String title="";
        if(body.containsKey("title")){
            title=body.get("title").toString();
        }
        ew.select("*")
                .like("title", "%"+title+"%") //模糊查询
                .eq("status", 1)
                .orderBy(false, false,"createtime");

        Page<Successfulcase> postList = successfulcaseService.page(page,ew);
        String js = JSONArray.toJSONString(postList);

        return Result.ok(js, "查询成功");
    }
    @ApiOperation(value = "保存或更新", notes = "参数格式json ；如果是添加数据时，id必须为空值", httpMethod = "POST")
    @PostMapping("/saveOrUpdate")
    public Result saveOrUpdate(@RequestBody Successfulcase body, HttpServletRequest httpServletRequest){

        successfulcaseService.saveOrUpdate(body);
        return Result.ok("添加成功");
    }
    @ApiOperation(value = "删除", notes = "主键参数id的数据类型是String", httpMethod = "POST")
    @PostMapping("/deleteRecord")
    public Result deleteRecord(@RequestBody String id, HttpServletRequest httpServletRequest){

        if(successfulcaseService.removeById(id)) {
            return Result.ok("删除成功");
        }else{
            return Result.ok("无记录");
        }
    }
}
